parameters:
    user.image.s3_bucket: '%env(USER_IMAGE_S3_BUCKET)%'
    user.password_reset_url: '%env(USER_PASSWORD_RESET_URL)%'
    user.email_verification_url: '%env(USER_EMAIL_VERIFICATION_URL)%'
    user.test_email_mask: '/\-test\@itinair.com/'

services:
    _defaults:
        autowire: true
        autoconfigure: true

    App\User\:
        resource: '../../src/User/*'
        exclude: '../../src/User/{DependencyInjection,Entity,Tests,Kernel.php}'

    App\User\Controller\:
        resource: '../../src/User/Controller'
        tags: ['controller.service_arguments']

    App\User\ParamConverter\UserEntityConverter:
        tags:
            - { name: request.param_converter, converter: "user.user_entity" }

    App\User\ResponseMapper\UserResponseMapper:
        arguments:
            $userImageS3Bucket: '%user.image.s3_bucket%'

    App\User\Service\UserManager:
        arguments:
            $defaultLocale: '%locale%'
            $defaultTimezone: '%timezone%'
            $userTestEmailMask: '%user.test_email_mask%'

    App\User\Service\UserFacebookIntegrationManager:
        arguments:
            $facebookAppId: '%facebook.app_id%'
            $facebookAppSecret: '%facebook.app_secret%'

    App\User\Service\UserEmailManager:
        arguments:
            $userEmailVerificationUrl: '%user.email_verification_url%'
            $userPasswordResetUrl: '%user.password_reset_url%'

    App\User\Service\UserRequestManager:
        arguments:
            $userImageUploader: '@user.image_uploader'

    user.image_uploader:
        class: App\Core\Service\ImageUploader
        arguments:
            $fileSystem: '@userImageFileSystem'
            $s3BucketName: '%user.image.s3_bucket%'

    gesdinet.jwtrefreshtoken.refresh_token_manager:
        class:  App\Core\Doctrine\RefreshTokenManager
        public: true
        arguments: [ '@gesdinet.jwtrefreshtoken.object_manager', '%gesdinet.jwtrefreshtoken.refresh_token.class%' ]

    Gesdinet\JWTRefreshTokenBundle\Service\RefreshToken: '@gesdinet.jwtrefreshtoken'
