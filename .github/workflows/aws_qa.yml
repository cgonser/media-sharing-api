on:
    push:
        branches:
            - master
        tags:
            - qa
            - qa.*

name: Deploy to QA

jobs:
    build:
        name: Build and push image
        runs-on: ubuntu-latest

        steps:
            -   name: Checkout
                uses: actions/checkout@v2

            -   name: Configure AWS credentials
                uses: aws-actions/configure-aws-credentials@v1
                with:
                    aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
                    aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
                    aws-region: eu-central-1

            -   name: Login to Amazon ECR
                id: login-ecr
                uses: aws-actions/amazon-ecr-login@v1

            -   name: Set up Docker Buildx
                id: buildx
                uses: docker/setup-buildx-action@master

            -   name: Cache Docker layers
                uses: actions/cache@v2
                with:
                    path: /tmp/.buildx-cache
                    key: ${{ runner.os }}-buildx-${{ github.sha }}
                    restore-keys: |
                        ${{ runner.os }}-buildx-

            -   name: Build, tag, and push image to Amazon ECR
                id: docker_build
                uses: docker/build-push-action@v2
                with:
                    context: ./
                    file: ./Dockerfile
                    builder: ${{ steps.buildx.outputs.name }}
                    push: true
                    tags:  ${{ steps.login-ecr.outputs.registry }}/api:qa-latest
                    cache-from: type=local,src=/tmp/.buildx-cache
                    cache-to: type=local,dest=/tmp/.buildx-cache

    deploy:
        name: Deploy new image on the ECS Service
        runs-on: ubuntu-latest
        needs: [build]

        steps:
            -   name: Configure AWS credentials
                uses: aws-actions/configure-aws-credentials@v1
                with:
                    aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
                    aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
                    aws-region: eu-central-1

            -   name: Deploy new image to ECS Service
                env:
                    CLUSTER: itinair
                    SERVICE_API: api-qa
                    SERVICE_WORKER: api-worker-qa
                    REGION: eu-central-1
                run: |
                    aws ecs update-service --cluster $CLUSTER --service $SERVICE_API --force-new-deployment --region $REGION
                    aws ecs update-service --cluster $CLUSTER --service $SERVICE_WORKER --force-new-deployment --region $REGION
